//创建数据库rumor
CREATE SCHEMA `rumor` ;

//创建用户表user
CREATE TABLE `rumor`.`user` (
  `uid` VARCHAR(20) NOT NULL, //主键uid，不超过20个char
  `grade` ENUM('ordinary', 'professor', 'administrator') NOT NULL, //等级grade，分为普通用户，专家和管理员
  `password` VARCHAR(20) NOT NULL, //密码，不超过20个char
  PRIMARY KEY (`uid`));

//创建谣言表information
CREATE TABLE `rumor`.`information` (
  `corcern` INT NOT NULL, //关注度，整形
  `content` VARCHAR(10000) NOT NULL, //具体内容，不超过10000个char
  `pid` INT NOT NULL, //主键pid，整形
  `time` DATE NOT NULL, //发布日期
  `truth` ENUM('true', 'false') NOT NULL, //真伪
  `uid` VARCHAR(20) NOT NULL, //发布人，是user表中uid的外键
  PRIMARY KEY (`pid`),
  INDEX `fk_uid_information_idx` (`uid` ASC) VISIBLE,
  CONSTRAINT `fk_uid_information`
    FOREIGN KEY (`uid`)
    REFERENCES `rumor`.`user` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

//创建公告表notice
CREATE TABLE `rumor`.`notice` (
  `content` VARCHAR(10000) NOT NULL, //公告内容，不超过10000个char
  `gid` INT NOT NULL, // 主键gid
  `time` DATE NOT NULL, // 发布时间
  `uid` VARCHAR(20) NOT NULL, //发布人，是user表uid的外键
  PRIMARY KEY (`gid`),
  INDEX `fk_uid_notice_idx` (`uid` ASC) VISIBLE,
  CONSTRAINT `fk_uid_notice`
    FOREIGN KEY (`uid`)
    REFERENCES `rumor`.`user` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

//创建问题表problem
CREATE TABLE `rumor`.`problem` (
  `answer` VARCHAR(10000) NOT NULL, //回答，不超过10000个char
  `content` VARCHAR(1000) NOT NULL, //问题内容，不超过1000个char
  `pid` INT NOT NULL, // 主键pid
  `time` DATE NOT NULL,// 发布日期
  `uid_o` VARCHAR(20) NOT NULL,//提问者id，是user表uid的外键
  `uid_p` VARCHAR(20) NOT NULL,//回答者id，是user表uid的外键
  PRIMARY KEY (`pid`),
  INDEX `fk_uid_problem_o_idx` (`uid_o` ASC) VISIBLE,
  INDEX `fk_uid_problem_p_idx` (`uid_p` ASC) VISIBLE,
  CONSTRAINT `fk_uid_problem_o`
    FOREIGN KEY (`uid_o`)
    REFERENCES `rumor`.`user` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_uid_problem_p`
    FOREIGN KEY (`uid_p`)
    REFERENCES `rumor`.`user` (`uid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
